@page "/contentrecommendation"
@inject IMovieRecommendationEngineRepository _repo
@inject MovieRecommendationService _movieRecommendationService

<h1>Content Recommendation</h1>

<BlazoredTypeahead SearchMethod="@SearchMovies"
                   @bind-Value="@selectedMovie"
                   Debounce="500">
    <SelectedTemplate>
        @context.Title
    </SelectedTemplate>
    <ResultTemplate>
        @context.Title (@context.Genres)
    </ResultTemplate>
    <NotFoundTemplate>
        Sorry, there weren't any search results.
    </NotFoundTemplate>
</BlazoredTypeahead>

<hr />

<div class="card-deck">
    @if (selectedMovie != null)
    {
        var movies = _movieRecommendationService.GetRecommendedMovies(selectedMovie.MovieId).Result;

        foreach (var movie in movies)
        {

            <div class="card">
                <img class="card-img-top" src="@movie.PosterUri" alt="@movie.Title">
                <div class="card-body">
                    <h5 class="card-title">@movie.Title</h5>
                    <p class="card-text">@movie.Overview</p>
                </div>
            </div>
        }
    }
</div>

@code{

    private Movie selectedMovie;

    private async Task<IEnumerable<Movie>> SearchMovies(string searchText)
    {
        return await _repo.GetMovieByTitle(searchText).ConfigureAwait(false);
    }
}


